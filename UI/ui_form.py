# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'ui_form.ui'
##
## Created by: Qt User Interface Compiler version 6.3.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QBrush, QColor, QConicalGradient, QCursor,
    QFont, QFontDatabase, QGradient, QIcon,
    QImage, QKeySequence, QLinearGradient, QPainter,
    QPalette, QPixmap, QRadialGradient, QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QApplication, QCheckBox, QComboBox,
    QFrame, QGroupBox, QLabel, QLineEdit,
    QListWidget, QListWidgetItem, QMainWindow, QPushButton,
    QSizePolicy, QTabWidget, QWidget)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(780, 640)
        MainWindow.setMinimumSize(QSize(780, 639))
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.tabWidget = QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName(u"tabWidget")
        self.tabWidget.setGeometry(QRect(10, 10, 760, 513))
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        font = QFont()
        font.setPointSize(9)
        self.tabWidget.setFont(font)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setTabPosition(QTabWidget.North)
        self.tabWidget.setTabShape(QTabWidget.Rounded)
        self.tab = QWidget()
        self.tab.setObjectName(u"tab")
        self.tab.setAutoFillBackground(False)
        self.browseButton1 = QPushButton(self.tab)
        self.browseButton1.setObjectName(u"browseButton1")
        self.browseButton1.setGeometry(QRect(670, 5, 75, 23))
        sizePolicy1 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.browseButton1.sizePolicy().hasHeightForWidth())
        self.browseButton1.setSizePolicy(sizePolicy1)
        font1 = QFont()
        font1.setPointSize(9)
        font1.setBold(False)
        self.browseButton1.setFont(font1)
        self.browseButton1.setAutoFillBackground(False)
        self.browseButton1.setStyleSheet(u"background-color: rgb(218, 218, 218);")
        self.browseButton1.setFlat(False)
        self.lineEdit = QLineEdit(self.tab)
        self.lineEdit.setObjectName(u"lineEdit")
        self.lineEdit.setGeometry(QRect(99, 5, 561, 23))
        self.lineEdit.setFont(font1)
        self.label = QLabel(self.tab)
        self.label.setObjectName(u"label")
        self.label.setGeometry(QRect(10, 5, 81, 23))
        sizePolicy2 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy2)
        self.label.setMinimumSize(QSize(75, 23))
        self.label.setFont(font1)
        self.label.setFrameShape(QFrame.NoFrame)
        self.label.setFrameShadow(QFrame.Plain)
        self.label.setTextFormat(Qt.PlainText)
        self.label.setAlignment(Qt.AlignJustify|Qt.AlignVCenter)
        self.label.setWordWrap(False)
        self.label_2 = QLabel(self.tab)
        self.label_2.setObjectName(u"label_2")
        self.label_2.setGeometry(QRect(10, 35, 81, 23))
        sizePolicy2.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy2)
        self.label_2.setMinimumSize(QSize(75, 23))
        self.label_2.setFont(font1)
        self.label_2.setFrameShape(QFrame.NoFrame)
        self.label_2.setFrameShadow(QFrame.Plain)
        self.label_2.setTextFormat(Qt.PlainText)
        self.label_2.setAlignment(Qt.AlignJustify|Qt.AlignVCenter)
        self.label_2.setWordWrap(False)
        self.lineEdit_2 = QLineEdit(self.tab)
        self.lineEdit_2.setObjectName(u"lineEdit_2")
        self.lineEdit_2.setGeometry(QRect(99, 35, 561, 23))
        self.lineEdit_2.setFont(font1)
        self.browseButton2 = QPushButton(self.tab)
        self.browseButton2.setObjectName(u"browseButton2")
        self.browseButton2.setGeometry(QRect(670, 35, 75, 23))
        sizePolicy1.setHeightForWidth(self.browseButton2.sizePolicy().hasHeightForWidth())
        self.browseButton2.setSizePolicy(sizePolicy1)
        self.browseButton2.setFont(font1)
        self.browseButton2.setAutoFillBackground(False)
        self.browseButton2.setStyleSheet(u"background-color: rgb(218, 218, 218);")
        self.browseButton2.setFlat(False)
        self.lineEdit_3 = QLineEdit(self.tab)
        self.lineEdit_3.setObjectName(u"lineEdit_3")
        self.lineEdit_3.setGeometry(QRect(99, 65, 561, 23))
        self.lineEdit_3.setFont(font1)
        self.seedButton = QPushButton(self.tab)
        self.seedButton.setObjectName(u"seedButton")
        self.seedButton.setGeometry(QRect(670, 65, 75, 23))
        sizePolicy1.setHeightForWidth(self.seedButton.sizePolicy().hasHeightForWidth())
        self.seedButton.setSizePolicy(sizePolicy1)
        self.seedButton.setFont(font1)
        self.seedButton.setAutoFillBackground(False)
        self.seedButton.setStyleSheet(u"background-color: rgb(218, 218, 218);")
        self.seedButton.setFlat(False)
        self.label_3 = QLabel(self.tab)
        self.label_3.setObjectName(u"label_3")
        self.label_3.setGeometry(QRect(10, 65, 81, 23))
        sizePolicy2.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy2)
        self.label_3.setMinimumSize(QSize(75, 23))
        self.label_3.setFont(font1)
        self.label_3.setFrameShape(QFrame.NoFrame)
        self.label_3.setFrameShadow(QFrame.Plain)
        self.label_3.setTextFormat(Qt.PlainText)
        self.label_3.setAlignment(Qt.AlignJustify|Qt.AlignVCenter)
        self.label_3.setWordWrap(False)
        self.tabWidget_2 = QTabWidget(self.tab)
        self.tabWidget_2.setObjectName(u"tabWidget_2")
        self.tabWidget_2.setGeometry(QRect(10, 104, 733, 372))
        self.tab_4 = QWidget()
        self.tab_4.setObjectName(u"tab_4")
        self.tradeGiftsCheck = QCheckBox(self.tab_4)
        self.tradeGiftsCheck.setObjectName(u"tradeGiftsCheck")
        self.tradeGiftsCheck.setEnabled(True)
        self.tradeGiftsCheck.setGeometry(QRect(10, 104, 173, 21))
        font2 = QFont()
        font2.setPointSize(9)
        font2.setStrikeOut(False)
        self.tradeGiftsCheck.setFont(font2)
        self.tradeGiftsCheck.setCheckable(True)
        self.chestsCheck = QCheckBox(self.tab_4)
        self.chestsCheck.setObjectName(u"chestsCheck")
        self.chestsCheck.setGeometry(QRect(10, 24, 173, 21))
        self.fishingCheck = QCheckBox(self.tab_4)
        self.fishingCheck.setObjectName(u"fishingCheck")
        self.fishingCheck.setGeometry(QRect(189, 64, 173, 21))
        self.instrumentCheck = QCheckBox(self.tab_4)
        self.instrumentCheck.setObjectName(u"instrumentCheck")
        self.instrumentCheck.setEnabled(True)
        self.instrumentCheck.setGeometry(QRect(369, 104, 173, 21))
        self.instrumentCheck.setFont(font2)
        self.instrumentCheck.setCheckable(True)
        self.heartsCheck = QCheckBox(self.tab_4)
        self.heartsCheck.setObjectName(u"heartsCheck")
        self.heartsCheck.setEnabled(True)
        self.heartsCheck.setGeometry(QRect(548, 24, 173, 21))
        self.heartsCheck.setFont(font2)
        self.heartsCheck.setCheckable(True)
        self.miscellaneousCheck = QCheckBox(self.tab_4)
        self.miscellaneousCheck.setObjectName(u"miscellaneousCheck")
        self.miscellaneousCheck.setGeometry(QRect(10, 144, 173, 21))
        self.bossCheck = QCheckBox(self.tab_4)
        self.bossCheck.setObjectName(u"bossCheck")
        self.bossCheck.setGeometry(QRect(369, 64, 173, 21))
        self.giftsCheck = QCheckBox(self.tab_4)
        self.giftsCheck.setObjectName(u"giftsCheck")
        self.giftsCheck.setGeometry(QRect(10, 64, 173, 21))
        self.rapidsCheck = QCheckBox(self.tab_4)
        self.rapidsCheck.setObjectName(u"rapidsCheck")
        self.rapidsCheck.setGeometry(QRect(189, 104, 173, 21))
        self.instrumentsComboBox = QComboBox(self.tab_4)
        self.instrumentsComboBox.addItem("")
        self.instrumentsComboBox.addItem("")
        self.instrumentsComboBox.addItem("")
        self.instrumentsComboBox.addItem("")
        self.instrumentsComboBox.addItem("")
        self.instrumentsComboBox.addItem("")
        self.instrumentsComboBox.addItem("")
        self.instrumentsComboBox.addItem("")
        self.instrumentsComboBox.addItem("")
        self.instrumentsComboBox.setObjectName(u"instrumentsComboBox")
        self.instrumentsComboBox.setGeometry(QRect(548, 104, 161, 22))
        self.instrumentsComboBox.setEditable(False)
        self.groupBox = QGroupBox(self.tab_4)
        self.groupBox.setObjectName(u"groupBox")
        self.groupBox.setGeometry(QRect(-1, 190, 731, 161))
        font3 = QFont()
        font3.setPointSize(16)
        self.groupBox.setFont(font3)
        self.groupBox.setAlignment(Qt.AlignCenter)
        self.seashellsComboBox = QComboBox(self.tab_4)
        self.seashellsComboBox.addItem("")
        self.seashellsComboBox.addItem("")
        self.seashellsComboBox.addItem("")
        self.seashellsComboBox.addItem("")
        self.seashellsComboBox.addItem("")
        self.seashellsComboBox.addItem("")
        self.seashellsComboBox.setObjectName(u"seashellsComboBox")
        self.seashellsComboBox.setGeometry(QRect(548, 144, 161, 22))
        self.seashellsComboBox.setEditable(False)
        self.dampeCheck = QCheckBox(self.tab_4)
        self.dampeCheck.setObjectName(u"dampeCheck")
        self.dampeCheck.setGeometry(QRect(189, 24, 173, 21))
        self.dampeCheck.setFont(font)
        self.trendyCheck = QCheckBox(self.tab_4)
        self.trendyCheck.setObjectName(u"trendyCheck")
        self.trendyCheck.setEnabled(True)
        self.trendyCheck.setGeometry(QRect(189, 144, 173, 21))
        font4 = QFont()
        font4.setPointSize(9)
        font4.setStrikeOut(True)
        self.trendyCheck.setFont(font4)
        self.trendyCheck.setStyleSheet(u"color: rgb(80, 80, 80);")
        self.trendyCheck.setCheckable(False)
        self.shopCheck = QCheckBox(self.tab_4)
        self.shopCheck.setObjectName(u"shopCheck")
        self.shopCheck.setEnabled(True)
        self.shopCheck.setGeometry(QRect(369, 24, 173, 21))
        self.shopCheck.setFont(font4)
        self.shopCheck.setStyleSheet(u"color: rgb(80, 80, 80);")
        self.shopCheck.setCheckable(False)
        self.seashellsCheck = QCheckBox(self.tab_4)
        self.seashellsCheck.setObjectName(u"seashellsCheck")
        self.seashellsCheck.setEnabled(True)
        self.seashellsCheck.setGeometry(QRect(369, 144, 173, 21))
        self.seashellsCheck.setFont(font4)
        self.seashellsCheck.setStyleSheet(u"color: rgb(80, 80, 80);")
        self.seashellsCheck.setCheckable(False)
        self.companionCheck = QCheckBox(self.tab_4)
        self.companionCheck.setObjectName(u"companionCheck")
        self.companionCheck.setEnabled(True)
        self.companionCheck.setGeometry(QRect(548, 64, 173, 21))
        self.companionCheck.setFont(font4)
        self.companionCheck.setStyleSheet(u"color: rgb(80, 80, 80);")
        self.companionCheck.setCheckable(False)
        self.tabWidget_2.addTab(self.tab_4, "")
        self.tab_5 = QWidget()
        self.tab_5.setObjectName(u"tab_5")
        self.shuffledBombsCheck = QCheckBox(self.tab_5)
        self.shuffledBombsCheck.setObjectName(u"shuffledBombsCheck")
        self.shuffledBombsCheck.setGeometry(QRect(189, 64, 173, 21))
        self.rupCheck = QCheckBox(self.tab_5)
        self.rupCheck.setObjectName(u"rupCheck")
        self.rupCheck.setGeometry(QRect(189, 144, 173, 21))
        self.farmingCheck = QCheckBox(self.tab_5)
        self.farmingCheck.setObjectName(u"farmingCheck")
        self.farmingCheck.setGeometry(QRect(369, 24, 173, 21))
        self.fastTrendyCheck = QCheckBox(self.tab_5)
        self.fastTrendyCheck.setObjectName(u"fastTrendyCheck")
        self.fastTrendyCheck.setGeometry(QRect(10, 64, 173, 21))
        self.tunicsCheck = QCheckBox(self.tab_5)
        self.tunicsCheck.setObjectName(u"tunicsCheck")
        self.tunicsCheck.setGeometry(QRect(369, 144, 173, 21))
        self.tunicsCheck.setFont(font2)
        self.tunicsCheck.setCheckable(True)
        self.stealingCheck = QCheckBox(self.tab_5)
        self.stealingCheck.setObjectName(u"stealingCheck")
        self.stealingCheck.setGeometry(QRect(369, 64, 173, 21))
        self.loadingCheck = QCheckBox(self.tab_5)
        self.loadingCheck.setObjectName(u"loadingCheck")
        self.loadingCheck.setEnabled(True)
        self.loadingCheck.setGeometry(QRect(548, 184, 173, 21))
        self.loadingCheck.setFont(font4)
        self.loadingCheck.setStyleSheet(u"color: rgb(80, 80, 80);")
        self.loadingCheck.setCheckable(False)
        self.kanaletCheck = QCheckBox(self.tab_5)
        self.kanaletCheck.setObjectName(u"kanaletCheck")
        self.kanaletCheck.setGeometry(QRect(189, 104, 173, 21))
        self.unlockedBombsCheck = QCheckBox(self.tab_5)
        self.unlockedBombsCheck.setObjectName(u"unlockedBombsCheck")
        self.unlockedBombsCheck.setGeometry(QRect(189, 24, 173, 21))
        self.bookCheck = QCheckBox(self.tab_5)
        self.bookCheck.setObjectName(u"bookCheck")
        self.bookCheck.setGeometry(QRect(10, 24, 173, 21))
        self.vanillaCheck = QCheckBox(self.tab_5)
        self.vanillaCheck.setObjectName(u"vanillaCheck")
        self.vanillaCheck.setGeometry(QRect(548, 24, 173, 21))
        self.songsCheck = QCheckBox(self.tab_5)
        self.songsCheck.setObjectName(u"songsCheck")
        self.songsCheck.setGeometry(QRect(10, 104, 173, 21))
        self.songsCheck.setFont(font4)
        self.songsCheck.setStyleSheet(u"color: rgb(80, 80, 80);")
        self.songsCheck.setCheckable(False)
        self.zapsCheck = QCheckBox(self.tab_5)
        self.zapsCheck.setObjectName(u"zapsCheck")
        self.zapsCheck.setGeometry(QRect(10, 144, 173, 21))
        self.musicCheck = QCheckBox(self.tab_5)
        self.musicCheck.setObjectName(u"musicCheck")
        self.musicCheck.setEnabled(True)
        self.musicCheck.setGeometry(QRect(369, 184, 173, 21))
        self.musicCheck.setFont(font2)
        self.musicCheck.setCheckable(True)
        self.spoilerCheck = QCheckBox(self.tab_5)
        self.spoilerCheck.setObjectName(u"spoilerCheck")
        self.spoilerCheck.setGeometry(QRect(548, 224, 173, 21))
        self.spoilerCheck.setCheckable(True)
        self.fastFishingCheck = QCheckBox(self.tab_5)
        self.fastFishingCheck.setObjectName(u"fastFishingCheck")
        self.fastFishingCheck.setGeometry(QRect(548, 64, 173, 21))
        self.mazeCheck = QCheckBox(self.tab_5)
        self.mazeCheck.setObjectName(u"mazeCheck")
        self.mazeCheck.setGeometry(QRect(548, 104, 173, 21))
        self.mazeCheck.setFont(font2)
        self.mazeCheck.setCheckable(True)
        self.bridgeCheck = QCheckBox(self.tab_5)
        self.bridgeCheck.setObjectName(u"bridgeCheck")
        self.bridgeCheck.setGeometry(QRect(369, 104, 173, 21))
        self.swampCheck = QCheckBox(self.tab_5)
        self.swampCheck.setObjectName(u"swampCheck")
        self.swampCheck.setGeometry(QRect(548, 144, 173, 21))
        self.swampCheck.setFont(font2)
        self.swampCheck.setCheckable(True)
        self.owlsComboBox = QComboBox(self.tab_5)
        self.owlsComboBox.addItem("")
        self.owlsComboBox.addItem("")
        self.owlsComboBox.setObjectName(u"owlsComboBox")
        self.owlsComboBox.setGeometry(QRect(10, 184, 161, 22))
        self.raceCheck = QCheckBox(self.tab_5)
        self.raceCheck.setObjectName(u"raceCheck")
        self.raceCheck.setGeometry(QRect(369, 224, 173, 21))
        self.raceCheck.setFont(font4)
        self.raceCheck.setStyleSheet(u"color: rgb(80, 80, 80);")
        self.raceCheck.setCheckable(False)
        self.enemyCheck = QCheckBox(self.tab_5)
        self.enemyCheck.setObjectName(u"enemyCheck")
        self.enemyCheck.setEnabled(True)
        self.enemyCheck.setGeometry(QRect(189, 184, 173, 21))
        self.enemyCheck.setFont(font2)
        self.enemyCheck.setCheckable(True)
        self.tabWidget_2.addTab(self.tab_5, "")
        self.tabWidget.addTab(self.tab, "")
        self.tabWidget_2.raise_()
        self.browseButton1.raise_()
        self.lineEdit.raise_()
        self.label.raise_()
        self.label_2.raise_()
        self.lineEdit_2.raise_()
        self.browseButton2.raise_()
        self.lineEdit_3.raise_()
        self.seedButton.raise_()
        self.label_3.raise_()
        self.tab_2 = QWidget()
        self.tab_2.setObjectName(u"tab_2")
        self.tab_2.setAutoFillBackground(False)
        self.label_7 = QLabel(self.tab_2)
        self.label_7.setObjectName(u"label_7")
        self.label_7.setGeometry(QRect(20, 5, 256, 31))
        sizePolicy2.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy2)
        self.label_7.setMinimumSize(QSize(75, 23))
        font5 = QFont()
        font5.setPointSize(12)
        font5.setBold(False)
        font5.setItalic(False)
        self.label_7.setFont(font5)
        self.label_7.setFrameShape(QFrame.NoFrame)
        self.label_7.setFrameShadow(QFrame.Plain)
        self.label_7.setTextFormat(Qt.PlainText)
        self.label_7.setAlignment(Qt.AlignCenter)
        self.label_7.setWordWrap(False)
        self.label_8 = QLabel(self.tab_2)
        self.label_8.setObjectName(u"label_8")
        self.label_8.setGeometry(QRect(475, 5, 256, 31))
        sizePolicy2.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy2)
        self.label_8.setMinimumSize(QSize(75, 23))
        self.label_8.setFont(font5)
        self.label_8.setFrameShape(QFrame.NoFrame)
        self.label_8.setFrameShadow(QFrame.Plain)
        self.label_8.setTextFormat(Qt.PlainText)
        self.label_8.setAlignment(Qt.AlignCenter)
        self.label_8.setWordWrap(False)
        self.excludeButton = QPushButton(self.tab_2)
        self.excludeButton.setObjectName(u"excludeButton")
        self.excludeButton.setGeometry(QRect(325, 165, 101, 81))
        font6 = QFont()
        font6.setPointSize(11)
        font6.setBold(False)
        self.excludeButton.setFont(font6)
        self.excludeButton.setAutoFillBackground(False)
        self.excludeButton.setStyleSheet(u"background-color: rgb(218, 218, 218);")
        self.includeButton = QPushButton(self.tab_2)
        self.includeButton.setObjectName(u"includeButton")
        self.includeButton.setGeometry(QRect(325, 265, 101, 81))
        self.includeButton.setFont(font6)
        self.includeButton.setAutoFillBackground(False)
        self.includeButton.setStyleSheet(u"background-color: rgb(218, 218, 218);")
        self.listWidget = QListWidget(self.tab_2)
        self.listWidget.setObjectName(u"listWidget")
        self.listWidget.setGeometry(QRect(20, 41, 256, 430))
        self.listWidget.setFont(font)
        self.listWidget.setFrameShape(QFrame.StyledPanel)
        self.listWidget.setFrameShadow(QFrame.Sunken)
        self.listWidget.setAlternatingRowColors(False)
        self.listWidget.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget.setUniformItemSizes(True)
        self.listWidget.setSortingEnabled(True)
        self.listWidget_2 = QListWidget(self.tab_2)
        self.listWidget_2.setObjectName(u"listWidget_2")
        self.listWidget_2.setGeometry(QRect(475, 41, 256, 430))
        self.listWidget_2.setFont(font)
        self.listWidget_2.setAlternatingRowColors(False)
        self.listWidget_2.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget_2.setUniformItemSizes(True)
        self.listWidget_2.setSortingEnabled(True)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QWidget()
        self.tab_3.setObjectName(u"tab_3")
        self.listWidget_4 = QListWidget(self.tab_3)
        self.listWidget_4.setObjectName(u"listWidget_4")
        self.listWidget_4.setGeometry(QRect(475, 41, 256, 430))
        self.listWidget_4.setFont(font)
        self.listWidget_4.setAlternatingRowColors(False)
        self.listWidget_4.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget_4.setUniformItemSizes(True)
        self.listWidget_4.setSortingEnabled(True)
        self.includeButton_2 = QPushButton(self.tab_3)
        self.includeButton_2.setObjectName(u"includeButton_2")
        self.includeButton_2.setGeometry(QRect(325, 265, 101, 81))
        self.includeButton_2.setFont(font6)
        self.includeButton_2.setAutoFillBackground(False)
        self.includeButton_2.setStyleSheet(u"background-color: rgb(218, 218, 218);")
        self.excludeButton_2 = QPushButton(self.tab_3)
        self.excludeButton_2.setObjectName(u"excludeButton_2")
        self.excludeButton_2.setGeometry(QRect(325, 165, 101, 81))
        self.excludeButton_2.setFont(font6)
        self.excludeButton_2.setAutoFillBackground(False)
        self.excludeButton_2.setStyleSheet(u"background-color: rgb(218, 218, 218);")
        self.listWidget_3 = QListWidget(self.tab_3)
        self.listWidget_3.setObjectName(u"listWidget_3")
        self.listWidget_3.setGeometry(QRect(20, 41, 256, 430))
        self.listWidget_3.setFont(font)
        self.listWidget_3.setFrameShape(QFrame.StyledPanel)
        self.listWidget_3.setFrameShadow(QFrame.Sunken)
        self.listWidget_3.setAlternatingRowColors(False)
        self.listWidget_3.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.listWidget_3.setUniformItemSizes(True)
        self.listWidget_3.setSortingEnabled(True)
        self.label_9 = QLabel(self.tab_3)
        self.label_9.setObjectName(u"label_9")
        self.label_9.setGeometry(QRect(475, 5, 256, 31))
        sizePolicy2.setHeightForWidth(self.label_9.sizePolicy().hasHeightForWidth())
        self.label_9.setSizePolicy(sizePolicy2)
        self.label_9.setMinimumSize(QSize(75, 23))
        self.label_9.setFont(font5)
        self.label_9.setFrameShape(QFrame.NoFrame)
        self.label_9.setFrameShadow(QFrame.Plain)
        self.label_9.setTextFormat(Qt.PlainText)
        self.label_9.setAlignment(Qt.AlignCenter)
        self.label_9.setWordWrap(False)
        self.label_10 = QLabel(self.tab_3)
        self.label_10.setObjectName(u"label_10")
        self.label_10.setGeometry(QRect(20, 5, 256, 31))
        sizePolicy2.setHeightForWidth(self.label_10.sizePolicy().hasHeightForWidth())
        self.label_10.setSizePolicy(sizePolicy2)
        self.label_10.setMinimumSize(QSize(75, 23))
        self.label_10.setFont(font5)
        self.label_10.setFrameShape(QFrame.NoFrame)
        self.label_10.setFrameShadow(QFrame.Plain)
        self.label_10.setTextFormat(Qt.PlainText)
        self.label_10.setAlignment(Qt.AlignCenter)
        self.label_10.setWordWrap(False)
        self.tricksComboBox = QComboBox(self.tab_3)
        self.tricksComboBox.addItem("")
        self.tricksComboBox.addItem("")
        self.tricksComboBox.addItem("")
        self.tricksComboBox.addItem("")
        self.tricksComboBox.addItem("")
        self.tricksComboBox.setObjectName(u"tricksComboBox")
        self.tricksComboBox.setGeometry(QRect(288, 81, 171, 22))
        self.tabWidget.addTab(self.tab_3, "")
        self.randomizeButton = QPushButton(self.centralwidget)
        self.randomizeButton.setObjectName(u"randomizeButton")
        self.randomizeButton.setGeometry(QRect(620, 583, 131, 41))
        self.randomizeButton.setFont(font6)
        self.randomizeButton.setAutoFillBackground(False)
        self.randomizeButton.setStyleSheet(u"background-color: rgb(218, 218, 218);")
        self.randomizeButton.setFlat(False)
        self.resetButton = QPushButton(self.centralwidget)
        self.resetButton.setObjectName(u"resetButton")
        self.resetButton.setGeometry(QRect(20, 583, 131, 41))
        self.resetButton.setFont(font6)
        self.resetButton.setAutoFillBackground(False)
        self.resetButton.setStyleSheet(u"background-color: rgb(218, 218, 218);")
        self.resetButton.setFlat(False)
        self.updateChecker = QLabel(self.centralwidget)
        self.updateChecker.setObjectName(u"updateChecker")
        self.updateChecker.setEnabled(True)
        self.updateChecker.setGeometry(QRect(179, 583, 421, 41))
        font7 = QFont()
        font7.setPointSize(12)
        self.updateChecker.setFont(font7)
        self.updateChecker.setAlignment(Qt.AlignCenter)
        self.updateChecker.setOpenExternalLinks(True)
        self.explainationLabel = QLabel(self.centralwidget)
        self.explainationLabel.setObjectName(u"explainationLabel")
        self.explainationLabel.setGeometry(QRect(30, 531, 721, 41))
        sizePolicy2.setHeightForWidth(self.explainationLabel.sizePolicy().hasHeightForWidth())
        self.explainationLabel.setSizePolicy(sizePolicy2)
        self.explainationLabel.setMinimumSize(QSize(75, 23))
        self.explainationLabel.setFont(font1)
        self.explainationLabel.setStyleSheet(u"color: rgb(80, 80, 80);")
        self.explainationLabel.setFrameShape(QFrame.NoFrame)
        self.explainationLabel.setFrameShadow(QFrame.Plain)
        self.explainationLabel.setTextFormat(Qt.RichText)
        self.explainationLabel.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.explainationLabel.setWordWrap(False)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)

        self.tabWidget.setCurrentIndex(0)
        self.browseButton1.setDefault(False)
        self.browseButton2.setDefault(False)
        self.seedButton.setDefault(False)
        self.tabWidget_2.setCurrentIndex(0)
        self.instrumentsComboBox.setCurrentIndex(0)
        self.seashellsComboBox.setCurrentIndex(0)
        self.owlsComboBox.setCurrentIndex(0)
        self.tricksComboBox.setCurrentIndex(0)
        self.randomizeButton.setDefault(False)
        self.resetButton.setDefault(False)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"Link's Awakening Randomizer", None))
        self.browseButton1.setText(QCoreApplication.translate("MainWindow", u"Browse", None))
        self.lineEdit.setText("")
        self.label.setText(QCoreApplication.translate("MainWindow", u"Romfs Dump", None))
        self.label_2.setText(QCoreApplication.translate("MainWindow", u"Output Folder", None))
        self.browseButton2.setText(QCoreApplication.translate("MainWindow", u"Browse", None))
        self.seedButton.setText(QCoreApplication.translate("MainWindow", u"New Seed", None))
        self.label_3.setText(QCoreApplication.translate("MainWindow", u"Optional Seed", None))
#if QT_CONFIG(tooltip)
        self.tradeGiftsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.tradeGiftsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether the trading quest can contain progress items<br></br><u>If this is not checked, it will still be randomized,</u> but will only contain optional items", None))
#endif // QT_CONFIG(whatsthis)
        self.tradeGiftsCheck.setText(QCoreApplication.translate("MainWindow", u"Trade Quest", None))
#if QT_CONFIG(tooltip)
        self.chestsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.chestsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether chests found in the overworld and caves can contain progress items<br></br><u>If this is not checked, they will still be randomized,</u> but will only contain optional items", None))
#endif // QT_CONFIG(whatsthis)
        self.chestsCheck.setText(QCoreApplication.translate("MainWindow", u"Chests", None))
#if QT_CONFIG(tooltip)
        self.fishingCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.fishingCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether the Mabe Fishing prizes can be progress items<br></br><u>If this is not checked, it will still be randomized,</u> but will only contain optional items", None))
#endif // QT_CONFIG(whatsthis)
        self.fishingCheck.setText(QCoreApplication.translate("MainWindow", u"Fishing", None))
#if QT_CONFIG(tooltip)
        self.instrumentCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.instrumentCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether instruments will be randomized<br></br><u>If this is not checked, it will not be randomized,</u> except for the instruments you start with", None))
#endif // QT_CONFIG(whatsthis)
        self.instrumentCheck.setText(QCoreApplication.translate("MainWindow", u"Instruments", None))
#if QT_CONFIG(tooltip)
        self.heartsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.heartsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether standing heart pieces can be progress items. Sunken ones are currently left as vanilla<br></br><u>If this is not checked, it will still be randomized,</u> but will only contain optional items", None))
#endif // QT_CONFIG(whatsthis)
        self.heartsCheck.setText(QCoreApplication.translate("MainWindow", u"Heart Pieces", None))
#if QT_CONFIG(whatsthis)
        self.miscellaneousCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether the miscellaneous standing items (sword, mushroom, ocarina, bird key, lens) can be progress items<br></br><u>If this is not checked, it will still be randomized,</u> but will only contain optional items", None))
#endif // QT_CONFIG(whatsthis)
        self.miscellaneousCheck.setText(QCoreApplication.translate("MainWindow", u"Miscellaneous", None))
#if QT_CONFIG(tooltip)
        self.bossCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.bossCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether bosses can drop progress items<br></br><u>If this is not checked, it will still be randomized,</u> but will only contain optional items", None))
#endif // QT_CONFIG(whatsthis)
        self.bossCheck.setText(QCoreApplication.translate("MainWindow", u"Boss Drops", None))
#if QT_CONFIG(tooltip)
        self.giftsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.giftsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether free gifts from NPCs can be progress items<br></br><u>If this is not checked, it will still be randomized,</u> but will only contain optional items", None))
#endif // QT_CONFIG(whatsthis)
        self.giftsCheck.setText(QCoreApplication.translate("MainWindow", u"Free Gifts", None))
#if QT_CONFIG(tooltip)
        self.rapidsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.rapidsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether the Rapids Race prizes as well as the items inside can be progress items<br></br><u>If this is not checked, it will still be randomized,</u> but will only contain optional items", None))
#endif // QT_CONFIG(whatsthis)
        self.rapidsCheck.setText(QCoreApplication.translate("MainWindow", u"Rapids", None))
        self.instrumentsComboBox.setItemText(0, QCoreApplication.translate("MainWindow", u"Starting Instruments:  0", None))
        self.instrumentsComboBox.setItemText(1, QCoreApplication.translate("MainWindow", u"Starting Instruments:  1", None))
        self.instrumentsComboBox.setItemText(2, QCoreApplication.translate("MainWindow", u"Starting Instruments:  2", None))
        self.instrumentsComboBox.setItemText(3, QCoreApplication.translate("MainWindow", u"Starting Instruments:  3", None))
        self.instrumentsComboBox.setItemText(4, QCoreApplication.translate("MainWindow", u"Starting Instruments:  4", None))
        self.instrumentsComboBox.setItemText(5, QCoreApplication.translate("MainWindow", u"Starting Instruments:  5", None))
        self.instrumentsComboBox.setItemText(6, QCoreApplication.translate("MainWindow", u"Starting Instruments:  6", None))
        self.instrumentsComboBox.setItemText(7, QCoreApplication.translate("MainWindow", u"Starting Instruments:  7", None))
        self.instrumentsComboBox.setItemText(8, QCoreApplication.translate("MainWindow", u"Starting Instruments:  8", None))

#if QT_CONFIG(whatsthis)
        self.instrumentsComboBox.setWhatsThis(QCoreApplication.translate("MainWindow", u"This lets you choose a number of random instruments to start with", None))
#endif // QT_CONFIG(whatsthis)
        self.instrumentsComboBox.setPlaceholderText("")
        self.groupBox.setTitle(QCoreApplication.translate("MainWindow", u"Experimental", None))
        self.seashellsComboBox.setItemText(0, QCoreApplication.translate("MainWindow", u"Max Seashells: 0", None))
        self.seashellsComboBox.setItemText(1, QCoreApplication.translate("MainWindow", u"Max Seashells: 5", None))
        self.seashellsComboBox.setItemText(2, QCoreApplication.translate("MainWindow", u"Max Seashells: 15", None))
        self.seashellsComboBox.setItemText(3, QCoreApplication.translate("MainWindow", u"Max Seashells: 30", None))
        self.seashellsComboBox.setItemText(4, QCoreApplication.translate("MainWindow", u"Max Seashells: 40", None))
        self.seashellsComboBox.setItemText(5, QCoreApplication.translate("MainWindow", u"Max Seashells: 50", None))

#if QT_CONFIG(whatsthis)
        self.seashellsComboBox.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls the maximum number of seashells to be considered in logic for the Seashell Mansion prizes", None))
#endif // QT_CONFIG(whatsthis)
        self.seashellsComboBox.setPlaceholderText("")
#if QT_CONFIG(tooltip)
        self.dampeCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.dampeCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether the Damp\u00e9 prizes can be progress items<br></br><u>The logic is not written to work with instrument shuffle,</u> and may result in unbeatable seeds", None))
#endif // QT_CONFIG(whatsthis)
        self.dampeCheck.setText(QCoreApplication.translate("MainWindow", u"Damp\u00e9", None))
#if QT_CONFIG(tooltip)
        self.trendyCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.trendyCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether the Trendy Game can contain progress items<br></br><u>If this is not checked, it will still be randomized,</u> but will only contain optional items", None))
#endif // QT_CONFIG(whatsthis)
        self.trendyCheck.setText(QCoreApplication.translate("MainWindow", u"Trendy Game", None))
#if QT_CONFIG(tooltip)
        self.shopCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.shopCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether the shop can sell progress items<br></br><u>Not yet implemented</u>", None))
#endif // QT_CONFIG(whatsthis)
        self.shopCheck.setText(QCoreApplication.translate("MainWindow", u"Shop", None))
#if QT_CONFIG(whatsthis)
        self.seashellsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls whether seashells can be progress items<br></br><u>Not yet implemented</u>", None))
#endif // QT_CONFIG(whatsthis)
        self.seashellsCheck.setText(QCoreApplication.translate("MainWindow", u"Seashells", None))
#if QT_CONFIG(tooltip)
        self.companionCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.companionCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls if BowWow and the Rooster will be shuffled alongside other items<br></br><u>Not yet implemented</u>", None))
#endif // QT_CONFIG(whatsthis)
        self.companionCheck.setText(QCoreApplication.translate("MainWindow", u"Companions", None))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), QCoreApplication.translate("MainWindow", u"Main Settings", None))
#if QT_CONFIG(tooltip)
        self.shuffledBombsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.shuffledBombsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"You need to find your bombs before you can obtain any from other means<br></br>This overrides Unlocked Bombs", None))
#endif // QT_CONFIG(whatsthis)
        self.shuffledBombsCheck.setText(QCoreApplication.translate("MainWindow", u"Shuffled Bombs", None))
#if QT_CONFIG(tooltip)
        self.rupCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.rupCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Turns the 28 freestanding rupees in Color Dungeon into item checks<br></br><u>If this is not checked</u>, they will stay as rupees", None))
#endif // QT_CONFIG(whatsthis)
        self.rupCheck.setText(QCoreApplication.translate("MainWindow", u"Blupsanity", None))
#if QT_CONFIG(tooltip)
        self.farmingCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.farmingCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Reduces time spent grinding Bombs and Powder", None))
#endif // QT_CONFIG(whatsthis)
        self.farmingCheck.setText(QCoreApplication.translate("MainWindow", u"Reduced Farming", None))
#if QT_CONFIG(tooltip)
        self.fastTrendyCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.fastTrendyCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Gives the final Trendy reward from getting the Bow-Wow Figure", None))
#endif // QT_CONFIG(whatsthis)
        self.fastTrendyCheck.setText(QCoreApplication.translate("MainWindow", u"Fast Trendy", None))
#if QT_CONFIG(tooltip)
        self.tunicsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.tunicsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Tunics will appear as checks<br></br>You can only swap between tunics you have obtained", None))
#endif // QT_CONFIG(whatsthis)
        self.tunicsCheck.setText(QCoreApplication.translate("MainWindow", u"Shuffled Tunics", None))
#if QT_CONFIG(tooltip)
        self.stealingCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.stealingCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"The shopkeeper will not kill you after stealing", None))
#endif // QT_CONFIG(whatsthis)
        self.stealingCheck.setText(QCoreApplication.translate("MainWindow", u"Fast Stealing", None))
#if QT_CONFIG(tooltip)
        self.loadingCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.loadingCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Randomizes loading zones<br></br><u>Not yet implemented</u>", None))
#endif // QT_CONFIG(whatsthis)
        self.loadingCheck.setText(QCoreApplication.translate("MainWindow", u"Randomize Entrances", None))
#if QT_CONFIG(tooltip)
        self.kanaletCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.kanaletCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Sets the Kanalet Gate to be open from the start", None))
#endif // QT_CONFIG(whatsthis)
        self.kanaletCheck.setText(QCoreApplication.translate("MainWindow", u"Open Kanalet", None))
#if QT_CONFIG(tooltip)
        self.unlockedBombsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.unlockedBombsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Bombs can be bought from the shop at the start, otherwise needs Conch Horn", None))
#endif // QT_CONFIG(whatsthis)
        self.unlockedBombsCheck.setText(QCoreApplication.translate("MainWindow", u"Unlocked Bombs", None))
#if QT_CONFIG(tooltip)
        self.bookCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.bookCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Removes needing the lens to read The Book of Dark Secrets", None))
#endif // QT_CONFIG(whatsthis)
        self.bookCheck.setText(QCoreApplication.translate("MainWindow", u"Free Book", None))
#if QT_CONFIG(tooltip)
        self.vanillaCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.vanillaCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Shield on Tarin and Sword at beach. Beginner friendly", None))
#endif // QT_CONFIG(whatsthis)
        self.vanillaCheck.setText(QCoreApplication.translate("MainWindow", u"Vanilla Start", None))
#if QT_CONFIG(tooltip)
        self.songsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.songsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Skips the song learning animations and instead just immediately gives the item", None))
#endif // QT_CONFIG(whatsthis)
        self.songsCheck.setText(QCoreApplication.translate("MainWindow", u"Fast Songs", None))
#if QT_CONFIG(tooltip)
        self.zapsCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.zapsCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Increases the number of potential zap traps over tenfold<br></br>This also allows them to be placed anywhere, not just in chests", None))
#endif // QT_CONFIG(whatsthis)
        self.zapsCheck.setText(QCoreApplication.translate("MainWindow", u"Zapsanity", None))
#if QT_CONFIG(tooltip)
        self.musicCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.musicCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Randomizes music", None))
#endif // QT_CONFIG(whatsthis)
        self.musicCheck.setText(QCoreApplication.translate("MainWindow", u"Randomize Music", None))
#if QT_CONFIG(tooltip)
        self.spoilerCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.spoilerCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Creates a spoiler log in case you get stuck", None))
#endif // QT_CONFIG(whatsthis)
        self.spoilerCheck.setText(QCoreApplication.translate("MainWindow", u"Create Spoiler Log", None))
#if QT_CONFIG(tooltip)
        self.fastFishingCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.fastFishingCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Removes all instrument requirements from the fishing minigame", None))
#endif // QT_CONFIG(whatsthis)
        self.fastFishingCheck.setText(QCoreApplication.translate("MainWindow", u"Fast Fishing", None))
#if QT_CONFIG(tooltip)
        self.mazeCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.mazeCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Sets the Sign Maze to be automatically comleted", None))
#endif // QT_CONFIG(whatsthis)
        self.mazeCheck.setText(QCoreApplication.translate("MainWindow", u"Open Mamu", None))
#if QT_CONFIG(tooltip)
        self.bridgeCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.bridgeCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Sets the Kanalet bridge to be built from the start", None))
#endif // QT_CONFIG(whatsthis)
        self.bridgeCheck.setText(QCoreApplication.translate("MainWindow", u"Completed Bridge", None))
#if QT_CONFIG(tooltip)
        self.swampCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.swampCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Turns the rock in front of Dungeon 2 into a flower", None))
#endif // QT_CONFIG(whatsthis)
        self.swampCheck.setText(QCoreApplication.translate("MainWindow", u"Classic D2", None))
        self.owlsComboBox.setItemText(0, QCoreApplication.translate("MainWindow", u"Owl Statues: Vanilla", None))
        self.owlsComboBox.setItemText(1, QCoreApplication.translate("MainWindow", u"Owl Statues: Gifts", None))

#if QT_CONFIG(whatsthis)
        self.raceCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"If this setting is checked, only 4 of the 8 dungeons can contain progress items.<br></br>The needed dungeons will be highlighted on the map from the start", None))
#endif // QT_CONFIG(whatsthis)
        self.raceCheck.setText(QCoreApplication.translate("MainWindow", u"Race Mode", None))
#if QT_CONFIG(tooltip)
        self.enemyCheck.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.enemyCheck.setWhatsThis(QCoreApplication.translate("MainWindow", u"Randomizes the enemies in the overworld and in caves", None))
#endif // QT_CONFIG(whatsthis)
        self.enemyCheck.setText(QCoreApplication.translate("MainWindow", u"Randomize Enemies", None))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_5), QCoreApplication.translate("MainWindow", u"Extra Settings", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), QCoreApplication.translate("MainWindow", u"Randomizer Settings", None))
        self.label_7.setText(QCoreApplication.translate("MainWindow", u"Included Checks", None))
        self.label_8.setText(QCoreApplication.translate("MainWindow", u"Excluded Checks", None))
        self.excludeButton.setText(QCoreApplication.translate("MainWindow", u"->", None))
        self.includeButton.setText(QCoreApplication.translate("MainWindow", u"<-", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), QCoreApplication.translate("MainWindow", u"Locations", None))
        self.includeButton_2.setText(QCoreApplication.translate("MainWindow", u"<-", None))
        self.excludeButton_2.setText(QCoreApplication.translate("MainWindow", u"->", None))
        self.label_9.setText(QCoreApplication.translate("MainWindow", u"Excluded Tricks", None))
        self.label_10.setText(QCoreApplication.translate("MainWindow", u"Included Tricks", None))
        self.tricksComboBox.setItemText(0, QCoreApplication.translate("MainWindow", u"Preset: Basic", None))
        self.tricksComboBox.setItemText(1, QCoreApplication.translate("MainWindow", u"Preset: Advanced", None))
        self.tricksComboBox.setItemText(2, QCoreApplication.translate("MainWindow", u"Preset: Glitched", None))
        self.tricksComboBox.setItemText(3, QCoreApplication.translate("MainWindow", u"Preset: Death", None))
        self.tricksComboBox.setItemText(4, QCoreApplication.translate("MainWindow", u"Preset: None", None))

#if QT_CONFIG(whatsthis)
        self.tricksComboBox.setWhatsThis(QCoreApplication.translate("MainWindow", u"This controls what logic preset to use", None))
#endif // QT_CONFIG(whatsthis)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), QCoreApplication.translate("MainWindow", u"Logic Tricks", None))
        self.randomizeButton.setText(QCoreApplication.translate("MainWindow", u"Randomize", None))
        self.resetButton.setText(QCoreApplication.translate("MainWindow", u"Reset Settings", None))
        self.updateChecker.setText(QCoreApplication.translate("MainWindow", u"Searching for updates...", None))
        self.explainationLabel.setText(QCoreApplication.translate("MainWindow", u"Hover over an option to see what it does", None))
    # retranslateUi

