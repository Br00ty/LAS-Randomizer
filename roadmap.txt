v0.4

- double check that FlowControl::CompareInt actually works
    I think I already did but we need to be absolutely sure before pushing a new build

- make sure logic knows that you can't have both followers at once

- merge settings from ProfessorLaw's fork
    start with keys, maps, compasses, & beaks
        WRITE ASM FOR THIS SO IT'S CLEANER
            adds different items depending on settings, asm needs to be on the same line, make sure assemble.py can handle that
    mess with chest textures more to make them look better
        seashell chest is excluded because it removes some value from the sensor

----------
v0.5

- eventflow edits through code gets pretty messy and hard to follow
    create our own type of flowchart file and write a parser that'll translate them into the .bfevfl files
    this reduces the amount of code and will just be plain easier to edit
    also create a Randomizer.bfevfl to handle giving all items, everything else will subflow to this
        made a branch for this, but rapids and seashell mansion crash for some reason, they might still need to be manual

- keysanity
    use the Randomizer.bfevfl and the itemIndex parameter with the FlowControl::CompareInt to determine dungeon
    holding up dungeon items can just display the "Place:LvXDungeon" text, no need for custom text

- barren dungeons

----------
v0.6

- shuffle followers
    rooster implementation is easy, just need to compile a list of every room + the actor of the check
    bowwow has not been tested. Unlike the rooster, bowwow physically exists and needs to be touched
    if nothing works too well, we can always use custom text and require to go to a telephone booth

- shop
    needs ASM changes to set the gettingFlag of the stolen item
    once set, we can simply just check for the flags in the post steal eventflow

----------
v0.7

- trendy
    needs .bfres editing, at least enough to rename the model & file

- randomized trendy physics

----------
GENERAL FUTURE STUFF TO LOOK INTO

- work on custom text
    use custom text to make tunics more intuitive

- make every telephone booth have bowwow and rooster to swap between

- individual tricks toggles

- better workaround for slime key

- make separete repo containing custom models to be used optionally with rando
    for songs, capacity upgrades, and even custom items

- fix sunken heart pieces
    needs asm to make heart pieces ignore inventory
    then all heart pieces will be changed back into heart piece actors

- randomize seashells
    FINISH PARTIAL SEASHELL SUPPORT
    will be by far the most complex asm
    seashells need to ignore inventory as well as add actor params to the ones dynamically spawned in

- write ASM to make ItemSmallKey actors check parameter[1] like ObjTreasureBox does

- fix dampe logic for instrument shuffle
    logic currently assumes that if you have the instrument, you have all the items needed to clear the rooms
    this is obviously not true with instrument shuffle, but logic is complex and I do not care enough for it
